{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-base.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-base.js","mtime":1529128638580},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Input, ContentChild, ContentChildren, QueryList } from '@angular/core';\nimport { HeaderTemplateDirective } from '../rendering/header/header-template.directive';\nimport { FooterTemplateDirective } from '../rendering/footer/footer-template.directive';\n/**\n * @hidden\n */\nexport var isSpanColumn = function (column) { return column.isSpanColumn; };\n/**\n * @hidden\n */\nexport var isCheckboxColumn = function (column) { return column.isCheckboxColumn; };\nvar isColumnContainer = function (column) { return column.isColumnGroup || isSpanColumn(column); };\n/**\n * @hidden\n */\nvar ColumnBase = /*@__PURE__*/ (function () {\n    function ColumnBase(parent) {\n        this.parent = parent;\n        this.matchesMedia = true;\n        this.orderIndex = 0;\n        /**\n         * @hidden\n         */\n        this.isColumnGroup = false;\n        /**\n         * @hidden\n         */\n        this.isSpanColumn = false;\n        /**\n         * Indicates whether the column is resizable or not.\n         * @default true\n         */\n        this.resizable = true;\n        /**\n         * Indicates whether the column is reorderable or not.\n         * @default true\n         */\n        this.reorderable = true;\n        /**\n         * The width (in pixels) below which the user is not able to resize the column by using the UI.\n         */\n        this.minResizableWidth = 10;\n        /**\n         * @hidden\n         */\n        this.headerTemplates = new QueryList();\n        if (parent && !isColumnContainer(parent)) {\n            throw new Error('Columns can be nested only inside ColumnGroupComponent');\n        }\n    }\n    Object.defineProperty(ColumnBase.prototype, \"width\", {\n        get: function () { return this._width; },\n        /**\n         * The width of the column (in pixels).\n         */\n        set: function (value) {\n            this._width = parseInt(value, 10);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"level\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            if (this.parent && isSpanColumn(this.parent)) {\n                return this.parent.level;\n            }\n            return this.parent ? this.parent.level + 1 : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"isLocked\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.parent ? this.parent.isLocked : this.locked;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"colspan\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    ColumnBase.prototype.rowspan = function (totalColumnLevels) {\n        return this.level < totalColumnLevels ? (totalColumnLevels - this.level) + 1 : 1;\n    };\n    Object.defineProperty(ColumnBase.prototype, \"headerTemplateRef\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            var template = this.headerTemplates.first;\n            return template ? template.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"footerTemplateRef\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"displayTitle\", {\n        get: function () {\n            return this.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnBase.prototype, \"isVisible\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return !this.hidden && this.matchesMedia;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColumnBase;\n}());\nexport { ColumnBase };\n",null]}