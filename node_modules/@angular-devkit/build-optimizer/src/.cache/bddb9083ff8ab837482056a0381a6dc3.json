{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-inputs/dist/es/common/changes.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-inputs/dist/es/common/changes.js","mtime":1529128637374},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/**\n * @hidden\n */\nexport var isChanged = function (propertyName, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return (changes[propertyName] && (!changes[propertyName].isFirstChange() || !skipFirstChange) &&\n        changes[propertyName].previousValue !== changes[propertyName].currentValue);\n};\n/**\n * @hidden\n */\nexport var anyChanged = function (propertyNames, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return propertyNames.some(function (name) { return isChanged(name, changes, skipFirstChange); });\n};\n",null]}