{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/view.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/view.component.js","mtime":1529128638668},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:component-selector-name  component-selector */\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Input, Output } from '@angular/core';\nimport { CalendarViewEnum } from './models/view.enum';\nimport { BusViewService } from './services/bus-view.service';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { cloneDate, isEqual, weekInYear } from '@progress/kendo-date-math';\nimport { getToday, setTime, stringifyClassObject } from '../util';\n/**\n * @hidden\n */\nvar ViewComponent = /*@__PURE__*/ (function () {\n    function ViewComponent(bus, intl, cdr) {\n        this.bus = bus;\n        this.intl = intl;\n        this.cdr = cdr;\n        this.isActive = true;\n        this.change = new EventEmitter();\n        this.colSpan = 0;\n        this.today = getToday();\n        this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    Object.defineProperty(ViewComponent.prototype, \"weekNumber\", {\n        get: function () {\n            return this.showWeekNumbers && this.activeView === CalendarViewEnum.month;\n        },\n        set: function (showWeekNumbers) {\n            this.showWeekNumbers = showWeekNumbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewComponent.prototype.ngOnChanges = function (_) {\n        this.service = this.bus.service(this.activeView);\n        if (!this.service) {\n            return;\n        }\n        this.colSpan = this.service.rowLength(this.weekNumber);\n        this.title = this.service.title(this.viewDate);\n        this.updateData();\n    };\n    ViewComponent.prototype.ngOnDestroy = function () {\n        this.intlSubscription.unsubscribe();\n    };\n    ViewComponent.prototype.handleClick = function (ctx) {\n        this.change.emit(ctx.value);\n    };\n    ViewComponent.prototype.firstDate = function (rowCtx) {\n        var ctx = this.firstWeekDateContext(rowCtx);\n        return ctx ? ctx.value : null;\n    };\n    ViewComponent.prototype.getWeekNumber = function (date) {\n        if (!this.weekNumber) {\n            return null;\n        }\n        return weekInYear(date, this.intl.firstDay());\n    };\n    ViewComponent.prototype.getWeekNumberContext = function (rowCtx) {\n        var ctx = this.firstWeekDateContext(rowCtx);\n        if (!this.weekNumber || !ctx) {\n            return null;\n        }\n        var weekNumber = weekInYear(ctx.value, this.intl.firstDay()).toString();\n        return {\n            formattedValue: weekNumber,\n            id: null,\n            isFocused: false,\n            isSelected: false,\n            isWeekend: false,\n            title: weekNumber,\n            value: cloneDate(ctx.value)\n        };\n    };\n    ViewComponent.prototype.getStyles = function (context) {\n        return stringifyClassObject({\n            'k-state-focused': this.isActive && context.isFocused,\n            'k-state-selected': context.isSelected,\n            'k-today': isEqual(context.value, this.today),\n            'k-weekend': context.isWeekend\n        });\n    };\n    ViewComponent.prototype.firstWeekDateContext = function (rowCtx) {\n        if (!this.weekNumber) {\n            return null;\n        }\n        var idx = 0;\n        var ctx = rowCtx[idx];\n        while (!ctx && idx < rowCtx.length) {\n            ctx = rowCtx[++idx];\n        }\n        return ctx;\n    };\n    ViewComponent.prototype.updateData = function () {\n        var time = this.selectedDate || this.today;\n        var viewDate = setTime(this.viewDate, time);\n        this.data = this.service.data({\n            cellUID: this.cellUID,\n            focusedDate: this.focusedDate,\n            isActiveView: !this.bus.canMoveDown(this.activeView),\n            max: this.max,\n            min: this.min,\n            selectedDate: this.selectedDate,\n            viewDate: viewDate\n        });\n    };\n    ViewComponent.prototype.intlChange = function () {\n        this.updateData();\n        this.cdr.markForCheck();\n    };\n    return ViewComponent;\n}());\nexport { ViewComponent };\n",null]}