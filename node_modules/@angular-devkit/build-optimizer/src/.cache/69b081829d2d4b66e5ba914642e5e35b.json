{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/checkbox-column.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/checkbox-column.component.js","mtime":1529128638564},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Component, forwardRef, ContentChild, SkipSelf, Host, Optional, Input } from '@angular/core';\nimport { ColumnBase } from './column-base';\nimport { CellTemplateDirective } from '../rendering/cell-template.directive';\n/**\n * Represents the selection checkbox column of the Grid.\n *\n * If the column is defined empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For an example on selecting or deselecting all items on a page, refer to the\n * section about the [select-all feature]({% slug selection_grid %}#toc-select-all-feature) of the Grid.\n *\n * For an example on persisting the selection in combination with the select-all feature,\n * refer to the section about\n * [modifying the default selection behavior]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n * of the Grid.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nvar CheckboxColumnComponent = (function (_super) {\n    tslib_1.__extends(CheckboxColumnComponent, _super);\n    function CheckboxColumnComponent(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.parent = parent;\n        /*\n         * @hidden\n         */\n        _this.isCheckboxColumn = true;\n        return _this;\n    }\n    Object.defineProperty(CheckboxColumnComponent.prototype, \"templateRef\", {\n        get: function () {\n            return this.template ? this.template.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CheckboxColumnComponent;\n}(ColumnBase));\nexport { CheckboxColumnComponent };\n",null]}