{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/navigation.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/navigation.component.js","mtime":1529128638122},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:component-selector-name  component-selector-type */\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { BusViewService } from './services/bus-view.service';\nimport { DOMService } from './services/dom.service';\nimport { CalendarViewEnum } from './models/view.enum';\nimport { VirtualizationComponent } from '../virtualization/virtualization.component';\nimport { MIN_DATE, MAX_DATE } from '../defaults';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { dateInRange } from '../util';\nvar ITEMS_COUNT = 30;\n/**\n * @hidden\n */\nvar NavigationComponent = /*@__PURE__*/ (function () {\n    function NavigationComponent(bus, dom, intl, cdr) {\n        this.bus = bus;\n        this.dom = dom;\n        this.intl = intl;\n        this.cdr = cdr;\n        this.min = new Date(MIN_DATE);\n        this.max = new Date(MAX_DATE);\n        this.focusedDate = new Date();\n        this.valueChange = new EventEmitter();\n        this.dates = [];\n        this.take = ITEMS_COUNT;\n        this.indexToScroll = -1;\n    }\n    Object.defineProperty(NavigationComponent.prototype, \"getComponentClass\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NavigationComponent.prototype.ngOnInit = function () {\n        this.dom.ensureHeights();\n        var calendarHeight = this.dom.calendarHeight;\n        this.itemHeight = this.dom.navigationItemHeight;\n        this.maxViewHeight = this.dom.monthViewHeight;\n        this.topOffset = (calendarHeight - this.itemHeight) / 2;\n        this.bottomOffset = calendarHeight - this.itemHeight;\n        this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    };\n    NavigationComponent.prototype.ngOnChanges = function (changes) {\n        this.service = this.bus.service(this.activeView);\n        if (!this.service) {\n            return;\n        }\n        var viewDate = dateInRange(this.focusedDate, this.min, this.max);\n        var total = this.service.total(this.min, this.max);\n        var totalChanged = this.total && this.total !== total;\n        this.skip = this.service.skip(viewDate, this.min);\n        this.total = total;\n        if (totalChanged || !this.service.isInArray(viewDate, this.dates)) {\n            this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n        }\n        if (!!changes.focusedDate || totalChanged) {\n            this.indexToScroll = this.service.skip(this.focusedDate, this.min);\n        }\n    };\n    NavigationComponent.prototype.ngOnDestroy = function () {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n        }\n    };\n    NavigationComponent.prototype.ngAfterViewInit = function () {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization.scrollToIndex(this.indexToScroll);\n        this.indexToScroll = -1;\n    };\n    NavigationComponent.prototype.ngAfterViewChecked = function () {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization.scrollToIndex(this.indexToScroll);\n        this.indexToScroll = -1;\n    };\n    NavigationComponent.prototype.pageChange = function (_a) {\n        var skip = _a.skip;\n        this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n    };\n    NavigationComponent.prototype.scrollChange = function (_a) {\n        var offset = _a.offset;\n        var translate = \"translateY(\" + offset + \"px)\";\n        this.style = { transform: translate, '-ms-transform': translate };\n    };\n    NavigationComponent.prototype.handleDateChange = function (candidate) {\n        this.valueChange.emit(cloneDate(candidate));\n    };\n    NavigationComponent.prototype.getTake = function (skip) {\n        return Math.min(this.total - skip, this.take);\n    };\n    NavigationComponent.prototype.intlChange = function () {\n        if (this.activeView === CalendarViewEnum.month) {\n            this.cdr.markForCheck();\n        }\n    };\n    return NavigationComponent;\n}());\nexport { NavigationComponent };\n",null]}