{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-group.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-group.component.js","mtime":1529128638600},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Component, forwardRef, SkipSelf, Host, Optional, ContentChildren } from '@angular/core';\nimport { ColumnBase } from './column-base';\nimport { columnsSpan } from './column-common';\n/**\n * @hidden\n */\nexport function isColumnGroupComponent(column) {\n    return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid.\n *\n * For more information, refer to the article on the\n * [multi-column headers]({% slug multicolumnheaders_columns_grid %}) of the Grid.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nvar ColumnGroupComponent = (function (_super) {\n    tslib_1.__extends(ColumnGroupComponent, _super);\n    function ColumnGroupComponent(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.parent = parent;\n        /**\n         * @hidden\n         */\n        _this.isColumnGroup = true;\n        /**\n         * @hidden\n         */\n        _this.minResizableWidth = 10;\n        if (parent && parent.isSpanColumn) {\n            throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n        }\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ColumnGroupComponent.prototype.rowspan = function () {\n        return 1;\n    };\n    Object.defineProperty(ColumnGroupComponent.prototype, \"colspan\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            var _this = this;\n            if (!this.children || this.children.length === 1) {\n                return 1;\n            }\n            return columnsSpan(this.children\n                .filter(function (child) { return child !== _this && child.isVisible; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColumnGroupComponent;\n}(ColumnBase));\nexport { ColumnGroupComponent };\n",null]}