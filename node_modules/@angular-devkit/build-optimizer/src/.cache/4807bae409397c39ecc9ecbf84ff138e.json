{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/services/scroll-sync.service.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/calendar/services/scroll-sync.service.js","mtime":1529128638429},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, NgZone } from '@angular/core';\nimport { DOMService } from './dom.service';\nvar divideByMagnitude = function (magnitude) { return function (x) { return Math.floor(x / magnitude); }; };\nvar powerByMagnitude = function (magnitude) { return function (x) { return x * magnitude; }; };\n/**\n * @hidden\n */\nvar ScrollSyncService = /*@__PURE__*/ (function () {\n    function ScrollSyncService(dom, zone) {\n        this.dom = dom;\n        this.zone = zone;\n    }\n    ScrollSyncService.prototype.configure = function (activeView) {\n        var magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);\n        this.divideByMagnitude = divideByMagnitude(magnitude);\n        this.powerByMagnitude = powerByMagnitude(magnitude);\n    };\n    ScrollSyncService.prototype.sync = function (navigator, view) {\n        var _this = this;\n        this.unsubscribe();\n        if (!navigator || !view) {\n            return;\n        }\n        this.navigator = navigator;\n        this.view = view;\n        this.zone.runOutsideAngular(function () {\n            var navScrolled, monthScrolled;\n            _this.navSubscription = navigator.scroll$()\n                .subscribe(function (e) {\n                if (monthScrolled) {\n                    monthScrolled = false;\n                    return;\n                }\n                navScrolled = true;\n                _this.scrollSiblingOf(e.target);\n            });\n            _this.viewSubscription = view.scroll$()\n                .subscribe(function (e) {\n                if (navScrolled) {\n                    navScrolled = false;\n                    return;\n                }\n                monthScrolled = true;\n                _this.scrollSiblingOf(e.target);\n            });\n        });\n    };\n    ScrollSyncService.prototype.scrollSiblingOf = function (scrolledElement) {\n        var component = this.siblingComponent(scrolledElement);\n        var scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);\n        component.scrollTo(scrollTop);\n    };\n    ScrollSyncService.prototype.siblingComponent = function (scrollableElement) {\n        return this.navigator.container.nativeElement === scrollableElement ? this.view : this.navigator;\n    };\n    ScrollSyncService.prototype.calculateScroll = function (component, scrollTop) {\n        var modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;\n        return modifier(scrollTop);\n    };\n    ScrollSyncService.prototype.destroy = function () {\n        this.unsubscribe();\n    };\n    ScrollSyncService.prototype.unsubscribe = function () {\n        if (this.navSubscription) {\n            this.navSubscription.unsubscribe();\n        }\n        if (this.viewSubscription) {\n            this.viewSubscription.unsubscribe();\n        }\n    };\n    return ScrollSyncService;\n}());\nexport { ScrollSyncService };\n",null]}