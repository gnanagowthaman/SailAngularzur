{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/selection/selection.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/selection/selection.directive.js","mtime":1529128667399},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Directive, ChangeDetectorRef } from '@angular/core';\nimport { GridComponent } from '../grid.component';\nimport { Selection } from \"./selection-default\";\n/**\n * A directive which stores the row selection state of the Grid in memory.\n * For a basic usage example, refer to the section on\n * [persisting the selection during data operations]({% slug selection_grid %}#toc-during-data-operations).\n */\nvar SelectionDirective = (function (_super) {\n    tslib_1.__extends(SelectionDirective, _super);\n    function SelectionDirective(grid, cd) {\n        var _this = _super.call(this, grid, cd) || this;\n        _this.grid = grid;\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    SelectionDirective.prototype.ngOnInit = function () {\n        if (this.grid.selectable === false) {\n            this.grid.selectable = true;\n        }\n        this.grid.selectionDirective = true;\n    };\n    /**\n     * @hidden\n     */\n    SelectionDirective.prototype.ngOnDestroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return SelectionDirective;\n}(Selection));\nexport { SelectionDirective };\n",null]}