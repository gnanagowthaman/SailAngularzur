{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-list.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column-list.js","mtime":1529128638612},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { QueryList } from '@angular/core';\nimport { sortColumns } from './column-common';\nvar forEachColumn = function (list, callback) {\n    list.forEach(function (column) {\n        callback(column);\n        if (column.children && column.children.length > 1) {\n            forEachColumn(column.children.toArray().slice(1), callback);\n        }\n    });\n};\nvar forEachLevel = function (list, callback) {\n    sortColumns(list)\n        .forEach(function (column) {\n        callback(column);\n        if (column.children && column.children.length > 1) {\n            forEachLevel(column.children.toArray().slice(1), callback);\n        }\n    });\n};\nvar filterHierarchy = function (list, predicate) {\n    var result = [];\n    sortColumns(list)\n        .forEach(function (column) {\n        if (predicate(column)) {\n            if (column.children) {\n                var children = filterHierarchy(column.children.toArray().slice(1), predicate);\n                if (children.length) {\n                    result.push.apply(result, [column].concat(children));\n                }\n            }\n            else if (!column.childColumns || filterHierarchy(column.childColumns.toArray(), predicate).length) {\n                result.push(column);\n            }\n        }\n    });\n    return result;\n};\n/**\n * @hidden\n */\nvar ColumnList = /*@__PURE__*/ (function () {\n    function ColumnList(columns) {\n        this.columns = columns;\n    }\n    ColumnList.prototype.forEach = function (callback) {\n        forEachColumn(this.columns, callback);\n    };\n    ColumnList.prototype.filter = function (callback) {\n        var result = [];\n        forEachColumn(this.columns, function (column) {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    };\n    ColumnList.prototype.filterHierarchy = function (predicate) {\n        return filterHierarchy(this.columns.toArray(), predicate);\n    };\n    ColumnList.prototype.filterSort = function (callback) {\n        var result = [];\n        forEachLevel(this.columns.toArray(), function (column) {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    };\n    ColumnList.prototype.toArray = function () {\n        var result = [];\n        forEachColumn(this.columns, function (column) {\n            result.push(column);\n        });\n        return result;\n    };\n    ColumnList.empty = function () { return new ColumnList(new QueryList()); };\n    return ColumnList;\n}());\nexport { ColumnList };\n",null]}