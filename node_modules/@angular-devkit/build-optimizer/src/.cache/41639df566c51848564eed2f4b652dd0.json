{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/filtering/filter-input-wrapper.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/filtering/filter-input-wrapper.component.js","mtime":1529128648123},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Input, ContentChild } from \"@angular/core\";\nimport { FilterInputDirective } from \"./filter-input.directive\";\nimport { isPresent, isNullOrEmptyString, isBlank, isChanged } from \"../utils\";\nimport { BaseFilterCellComponent } from \"./base-filter-cell.component\";\n/**\n * @hidden\n */\nvar FilterInputWrapperComponent = (function (_super) {\n    tslib_1.__extends(FilterInputWrapperComponent, _super);\n    function FilterInputWrapperComponent(filterService) {\n        var _this = _super.call(this, filterService) || this;\n        _this.operators = [];\n        return _this;\n    }\n    Object.defineProperty(FilterInputWrapperComponent.prototype, \"currentFilter\", {\n        get: function () {\n            return this.filterByField(this.column.field);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FilterInputWrapperComponent.prototype, \"currentOperator\", {\n        get: function () {\n            var filter = this.currentFilter;\n            if (!this._operator) {\n                this._operator = filter ? filter.operator : this.defaultOperator;\n            }\n            return this._operator;\n        },\n        set: function (value) {\n            this._operator = value;\n            if (value === \"isnull\" || value === \"isnotnull\" || value === \"isempty\" || value === \"isnotempty\") {\n                this.applyNoValueFilter(value);\n            }\n            else if (!isBlank(value) && isPresent(this.currentFilter)) {\n                this.onChange(this.currentFilter.value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FilterInputWrapperComponent.prototype, \"defaultOperator\", {\n        get: function () {\n            if (!isNullOrEmptyString(this._defaultOperator)) {\n                return this._defaultOperator;\n            }\n            else if (this.operators && this.operators.length) {\n                return this.operators[0].value;\n            }\n            return \"eq\";\n        },\n        set: function (value) {\n            this._defaultOperator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FilterInputWrapperComponent.prototype.ngAfterContentInit = function () {\n        if (isPresent(this.input)) {\n            this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n        }\n    };\n    FilterInputWrapperComponent.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    };\n    FilterInputWrapperComponent.prototype.onChange = function (value) {\n        if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n            this.filterChange(isNullOrEmptyString(value) ?\n                this.removeFilter(this.column.field) :\n                this.updateFilter({\n                    field: this.column.field,\n                    operator: this.currentOperator,\n                    value: value\n                }));\n        }\n    };\n    FilterInputWrapperComponent.prototype.onClear = function () {\n        this.onChange(null);\n    };\n    FilterInputWrapperComponent.prototype.applyNoValueFilter = function (operator) {\n        this.filterChange(this.updateFilter({\n            field: this.column.field,\n            operator: operator,\n            value: null\n        }));\n    };\n    FilterInputWrapperComponent.prototype.ngOnChanges = function (changes) {\n        if (isChanged(\"filter\", changes, false)) {\n            this._operator = null;\n        }\n    };\n    return FilterInputWrapperComponent;\n}(BaseFilterCellComponent));\nexport { FilterInputWrapperComponent };\n",null]}