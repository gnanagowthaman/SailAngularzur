{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/util.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/util.js","mtime":1529128646101},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:no-bitwise max-line-length */\nimport { addDays, cloneDate, getDate } from '@progress/kendo-date-math';\nimport { MIDNIGHT_DATE } from './defaults';\nvar isSet = function (value) { return value !== null && value !== undefined; };\nvar setter = function (method) { return function (date, value) {\n    var clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n}; };\n/**\n * @hidden\n */\nexport var setTime = function (origin, candidate) {\n    var date = cloneDate(origin);\n    date.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());\n    return date;\n};\nvar normalizeTimes = function (candidate, min, max) { return ({\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), min.getHours() < max.getHours() ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n}); };\n/**\n * @hidden\n */\nexport var setHours = setter('setHours');\n/**\n * @hidden\n */\nexport var setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\nexport var setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\nexport var range = function (start, end, step) {\n    if (step === void 0) { step = 1; }\n    var result = [];\n    for (var i = start; i < end; i = i + step) {\n        result.push(i);\n    }\n    return result;\n};\n/**\n * @hidden\n */\nexport var isInRange = function (candidate, min, max) { return (!candidate || !((min && min > candidate) || (max && max < candidate))); };\n/**\n * @hidden\n */\nexport var isInTimeRange = function (candidate, min, max) {\n    if (!candidate || !min || !max) {\n        return true;\n    }\n    var _a = normalizeTimes(candidate, min, max), candidateValue = _a.candidateValue, minValue = _a.minValue, maxValue = _a.maxValue;\n    return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\nexport var isValidRange = function (min, max) { return (!isSet(min) || !isSet(max) || min <= max); };\n/**\n * @hidden\n */\nexport var dateInRange = function (candidate, min, max) {\n    if (!candidate) {\n        return candidate;\n    }\n    if (min && candidate < min) {\n        return cloneDate(min);\n    }\n    if (max && candidate > max) {\n        return cloneDate(max);\n    }\n    return candidate;\n};\n/**\n * @hidden\n */\nexport var timeInRange = function (candidate, min, max) {\n    if (!candidate || !min || !max) {\n        return candidate;\n    }\n    var _a = normalizeTimes(candidate, min, max), candidateValue = _a.candidateValue, minValue = _a.minValue, maxValue = _a.maxValue;\n    if (candidateValue < minValue) {\n        return setTime(candidate, min);\n    }\n    if (candidateValue > maxValue) {\n        return setTime(candidate, max);\n    }\n    return candidate;\n};\n/**\n * @hidden\n */\nexport var getNow = function () { return new Date(); };\n/**\n * @hidden\n */\nexport var getToday = function () { return getDate(new Date()); };\n/**\n * @hidden\n */\nexport var guid = function () {\n    var id = \"\", random;\n    for (var i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n/**\n * @hidden\n */\nexport var noop = function (_) { }; // tslint:disable-line:no-empty\n/**\n * @hidden\n */\nexport var isDocumentAvailable = function () {\n    return typeof document !== 'undefined';\n};\n/**\n * @hidden\n */\nexport var isWindowAvailable = function () {\n    return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\nexport var stringifyClassObject = function (classes) {\n    var pushToAcc = function (acc, cls) { return classes[cls] ? acc.concat(cls) : acc; };\n    return Object.keys(classes).reduce(pushToAcc, []).join(' ');\n};\n/**\n * @hidden\n */\nexport var shiftWeekNames = function (names, offset) { return (names.slice(offset).concat(names.slice(0, offset))); };\n/**\n * @hidden\n */\nexport var approximateStringMatching = function (oldTextOrigin, oldFormat, newTextOrigin, caret) {\n    // Remove the right part of the cursor.\n    //oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n    var oldTextSeparator = oldTextOrigin[caret + oldTextOrigin.length - newTextOrigin.length];\n    var oldText = oldTextOrigin.substring(0, caret + oldTextOrigin.length - newTextOrigin.length);\n    var newText = newTextOrigin.substring(0, caret);\n    var diff = [];\n    // Handle typing a single character over the same selection.\n    if (oldText === newText && caret > 0) {\n        diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n        return diff;\n    }\n    if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n        // Handle Delete/Backspace.\n        var deletedSymbol = \"\";\n        //XXX:\n        // Whole text is replaced with a same char\n        // Nasty patch required to keep the selection in the first segment\n        if (newText.length === 1) {\n            diff.push([oldFormat[0], newText[0]]);\n        }\n        for (var i = newText.length; i < oldText.length; i++) {\n            if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== \"_\") {\n                deletedSymbol = oldFormat[i];\n                diff.push([deletedSymbol, \"\"]);\n            }\n        }\n        return diff;\n    }\n    // Handle inserting text (the new text is longer than the previous one).\n    // Handle typing over a literal as well.\n    if (newText.indexOf(oldText) === 0 || oldFormat[caret - 1] === \"_\") {\n        var symbol = oldFormat[0];\n        for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n            if (oldFormat[i] !== \"_\") {\n                symbol = oldFormat[i];\n                break;\n            }\n        }\n        return [[symbol, newText[caret - 1]]];\n    }\n    // Handle entering a space or a separator, for navigation to the next item.\n    if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator) {\n        return [[oldFormat[caret - 1], \"_\"]];\n    }\n    // Handle typing over a correctly selected part.\n    return [[oldFormat[caret - 1], newText[caret - 1]]];\n};\n/**\n * @hidden\n */\nexport var domContainerFactory = function (type) { return function (children, classes, styles) {\n    if (classes === void 0) { classes = \"\"; }\n    if (styles === void 0) { styles = {}; }\n    var container = document.createElement(type);\n    container.className = classes;\n    Object.keys(styles).map(function (key) { return container.style[key] = styles[key]; });\n    if (typeof children === 'string') {\n        container.innerHTML = children || '';\n    }\n    else {\n        (children || []).forEach(function (child) { return child && container.appendChild(child); });\n    }\n    return container;\n}; };\n/**\n * @hidden\n */\nexport var hasChange = function (changes, field) { return changes[field] !== undefined; };\n/**\n * @hidden\n */\nexport var hasExistingValue = function (changes, field) { return changes[field] && changes[field].currentValue !== undefined && changes[field].currentValue !== null; };\n",null]}