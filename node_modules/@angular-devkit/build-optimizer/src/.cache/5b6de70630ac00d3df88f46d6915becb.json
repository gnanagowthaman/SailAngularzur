{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-inputs/dist/es/textbox/textarea.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-inputs/dist/es/textbox/textarea.directive.js","mtime":1529128638847},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, ElementRef, EventEmitter, HostBinding, Output, Renderer2, Optional, Inject } from '@angular/core';\nimport { RTL } from '@progress/kendo-angular-l10n';\n/**\n * Represents the Kendo UI TextArea directive for the Inputs components for Angular.\n * Used to add a floating label to any `textarea` element.\n *\n * @example\n * ```ts-no-run\n * <textarea kendoTextArea></textarea>\n * ```\n */\nvar TextAreaDirective = /*@__PURE__*/ (function () {\n    function TextAreaDirective(renderer, textAreaElement, rtl) {\n        this.renderer = renderer;\n        this.textAreaElement = textAreaElement;\n        /**\n         * Fires each time the user focuses the `textarea` element.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the `textarea` element gets blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        this.listeners = [];\n        this.direction = rtl ? 'rtl' : 'ltr';\n    }\n    Object.defineProperty(TextAreaDirective.prototype, \"elementClass\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextAreaDirective.prototype, \"value\", {\n        /**\n         * Gets the value of the `textarea` element.\n         */\n        get: function () {\n            return this.textAreaElement.nativeElement.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextAreaDirective.prototype, \"id\", {\n        get: function () {\n            return this.textAreaElement.nativeElement.id;\n        },\n        set: function (id) {\n            this.renderer.setAttribute(this.textAreaElement.nativeElement, 'id', id);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextAreaDirective.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        var textarea = this.textAreaElement.nativeElement;\n        this.listeners = [\n            this.renderer.listen(textarea, 'focus', function () { return _this.onFocus.emit(); }),\n            this.renderer.listen(textarea, 'blur', function () { return _this.onBlur.emit(); })\n        ];\n    };\n    TextAreaDirective.prototype.ngOnDestroy = function () {\n        this.listeners.forEach(function (listener) { return listener(); });\n    };\n    return TextAreaDirective;\n}());\nexport { TextAreaDirective };\n",null]}