{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/utils.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/utils.js","mtime":1529128667494},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { InjectionToken } from '@angular/core';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from \"rxjs/observable/of\";\n/**\n * @hidden\n */\nexport var isPresent = function (value) { return value !== null && value !== undefined; };\n/**\n * @hidden\n */\nexport var isBlank = function (value) { return value === null || value === undefined; };\n/**\n * @hidden\n */\nexport var isArray = function (value) { return Array.isArray(value); };\n/**\n * @hidden\n */\nexport var isTruthy = function (value) { return !!value; };\n/**\n * @hidden\n */\nexport var isNullOrEmptyString = function (value) { return isBlank(value) || (value.trim && value.trim().length === 0); };\n/**\n * @hidden\n */\nexport var isChanged = function (propertyName, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return (changes[propertyName] && (!changes[propertyName].isFirstChange() || !skipFirstChange) &&\n        changes[propertyName].previousValue !== changes[propertyName].currentValue);\n};\n/**\n * @hidden\n */\nexport var anyChanged = function (propertyNames, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return propertyNames.some(function (name) { return isChanged(name, changes, skipFirstChange); });\n};\n/**\n * @hidden\n */\nexport var observe = function (list) {\n    return merge(of(list), list.changes);\n};\n/**\n * @hidden\n */\nexport var isUniversal = function () { return typeof document === 'undefined'; };\n/**\n * @hidden\n */\nexport var extractFormat = function (format) {\n    if (!isNullOrEmptyString(format) && format.startsWith('{0:')) {\n        return format.slice(3, format.length - 1);\n    }\n    return format;\n};\n/**\n * @hidden\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * @hidden\n */\nexport var or = function () {\n    var conditions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        conditions[_i] = arguments[_i];\n    }\n    return function (value) { return conditions.reduce(function (acc, x) { return acc || x(value); }, false); };\n};\n/**\n * @hidden\n */\nexport var and = function () {\n    var conditions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        conditions[_i] = arguments[_i];\n    }\n    return function (value) { return conditions.reduce(function (acc, x) { return acc && x(value); }, true); };\n};\n/**\n * @hidden\n */\nexport var Skip = new InjectionToken(\"Skip\"); // tslint:disable-line:variable-name\n/**\n * @hidden\n */\nexport var guid = function () {\n    var id = \"\";\n    var i;\n    var random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0; // tslint:disable-line:no-bitwise\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        // tslint:disable-next-line:no-bitwise\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n",null]}