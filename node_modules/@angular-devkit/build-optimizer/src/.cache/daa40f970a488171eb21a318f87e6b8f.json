{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/grouping/group-header.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/grouping/group-header.component.js","mtime":1529128654731},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, HostBinding } from '@angular/core';\nimport { GroupsService } from './groups.service';\nimport { GroupInfoService } from './group-info.service';\nimport { columnsSpan } from \"../columns/column-common\";\n/**\n * @hidden\n */\nvar GroupHeaderComponent = /*@__PURE__*/ (function () {\n    function GroupHeaderComponent(groupsService, groupInfoService) {\n        this.groupsService = groupsService;\n        this.groupInfoService = groupInfoService;\n        this.skipGroupDecoration = false;\n        this.hasDetails = false;\n        this.totalColumnsCount = 0;\n        this.columns = [];\n        this.groups = [];\n    }\n    Object.defineProperty(GroupHeaderComponent.prototype, \"groupItemClass\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GroupHeaderComponent.prototype.prefixGroupCell = function (item) {\n        return new Array(item.level);\n    };\n    GroupHeaderComponent.prototype.toggleGroup = function (item) {\n        this.groupsService.toggleRow(item.index, item.data);\n        return false;\n    };\n    GroupHeaderComponent.prototype.groupSpan = function (item) {\n        var columnCount = columnsSpan(this.columns);\n        if (this.skipGroupDecoration) {\n            return columnCount;\n        }\n        var groupCount = (this.groups || []).length;\n        if (this.hasDetails) {\n            columnCount++;\n        }\n        return groupCount + columnCount - item.level;\n    };\n    GroupHeaderComponent.prototype.logicalColSpan = function () {\n        return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n    };\n    GroupHeaderComponent.prototype.ariaRole = function () {\n        if (this.skipGroupDecoration) {\n            return 'presentation';\n        }\n    };\n    GroupHeaderComponent.prototype.groupButtonStyles = function (groupIndex) {\n        var expanded = this.groupsService.isExpanded(groupIndex);\n        return { 'k-i-collapse': expanded, 'k-i-expand': !expanded, 'k-icon': true };\n    };\n    GroupHeaderComponent.prototype.formatForGroup = function (item) {\n        return this.groupInfoService.formatForGroup(item);\n    };\n    GroupHeaderComponent.prototype.groupTitle = function (item) {\n        return this.groupInfoService.groupTitle(item);\n    };\n    GroupHeaderComponent.prototype.groupHeaderTemplate = function (item) {\n        return this.groupInfoService.groupHeaderTemplate(item);\n    };\n    return GroupHeaderComponent;\n}());\nexport { GroupHeaderComponent };\n",null]}