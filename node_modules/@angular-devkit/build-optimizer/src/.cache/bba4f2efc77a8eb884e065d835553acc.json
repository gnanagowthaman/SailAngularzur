{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/local-edit.service.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/local-edit.service.js","mtime":1529128643698},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { isDevMode } from '@angular/core';\n/**\n * @hidden\n */\nvar LocalEditService = /*@__PURE__*/ (function () {\n    function LocalEditService(grid, localDataChangesService) {\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    LocalEditService.prototype.create = function (item) {\n        if (this.hasLocalData && this.grid.skip) {\n            this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n        }\n        else {\n            this.data.unshift(item);\n        }\n        this.dataChanged();\n    };\n    LocalEditService.prototype.update = function (_item) { }; // tslint:disable-line:no-empty\n    LocalEditService.prototype.remove = function (item) {\n        var data = this.data;\n        for (var idx = 0; idx < data.length; idx++) {\n            if (item === data[idx]) {\n                data.splice(idx, 1);\n                this.dataChanged({ action: 'remove', item: item });\n                break;\n            }\n        }\n    };\n    LocalEditService.prototype.assignValues = function (target, source) {\n        Object.assign(target, source);\n    };\n    LocalEditService.prototype.dataChanged = function (args) {\n        if (args === void 0) {\n            args = {};\n        }\n        if (this.hasLocalData) {\n            this.localDataChangesService.changes.emit(args);\n        }\n    };\n    Object.defineProperty(LocalEditService.prototype, \"hasLocalData\", {\n        get: function () {\n            return Array.isArray(this.localDataChangesService.data);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LocalEditService.prototype, \"data\", {\n        get: function () {\n            if (this.hasLocalData) {\n                return this.localDataChangesService.data;\n            }\n            var data = this.grid.data;\n            if (Array.isArray(data)) {\n                return data;\n            }\n            if (isDevMode()) {\n                throw new Error('The default edit service of the editing directives works only when binding to plain array.' +\n                    'Please provide an editService.');\n            }\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LocalEditService;\n}());\nexport { LocalEditService };\n",null]}