{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/template-editing.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/template-editing.directive.js","mtime":1529128643785},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Directive, Input } from '@angular/core';\nimport { RowEditingDirectiveBase } from './row-editing-directive-base';\nimport { GridComponent } from '../grid.component';\nimport { LocalDataChangesService } from '../editing/local-data-changes.service';\n/**\n * A directive which encapsulates the editing operations of the Grid when using the Template-Driven Angular Forms.\n */\nvar TemplateEditingDirective = (function (_super) {\n    tslib_1.__extends(TemplateEditingDirective, _super);\n    function TemplateEditingDirective(grid, localDataChangesService) {\n        var _this = _super.call(this, grid, localDataChangesService) || this;\n        _this.grid = grid;\n        _this.localDataChangesService = localDataChangesService;\n        return _this;\n    }\n    TemplateEditingDirective.prototype.editHandler = function (args) {\n        _super.prototype.editHandler.call(this, args);\n        this.dataItem = args.dataItem;\n        this.originalValues = {};\n        this.editService.assignValues(this.originalValues, this.dataItem);\n    };\n    TemplateEditingDirective.prototype.closeEditor = function (rowIndex) {\n        if (this.dataItem) {\n            this.editService.assignValues(this.dataItem, this.originalValues);\n        }\n        _super.prototype.closeEditor.call(this, rowIndex);\n    };\n    TemplateEditingDirective.prototype.createModel = function (args) {\n        if (args.isNew) {\n            return this.createNewItem();\n        }\n    };\n    TemplateEditingDirective.prototype.saveModel = function (args) {\n        return args.dataItem;\n    };\n    TemplateEditingDirective.prototype.clean = function () {\n        _super.prototype.clean.call(this);\n        delete this.dataItem;\n    };\n    return TemplateEditingDirective;\n}(RowEditingDirectiveBase));\nexport { TemplateEditingDirective };\n",null]}