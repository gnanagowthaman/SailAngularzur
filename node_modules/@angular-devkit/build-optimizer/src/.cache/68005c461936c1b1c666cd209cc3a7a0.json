{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing/add-command.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing/add-command.directive.js","mtime":1529128644148},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Directive, HostListener, HostBinding, ElementRef, Renderer2 as Renderer } from '@angular/core';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { EditService } from './edit.service';\n/**\n * Represents the `add new item` command of the Grid.\n *\n * You can apply this directive to any `button` element inside a\n * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n *\n * When an associated button with the directive is clicked, the\n * [`add`]({% slug api_grid_gridcomponent %}#toc-add) event\n * is triggered. For more information, refer to the [editing example]({% slug editing_grid %}).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *    <ng-template kendoGridToolbarTemplate>\n *       <button kendoGridAddCommand>Add new</button>\n *    </ng-template>\n * </kendo-grid>\n * ```\n */\nvar AddCommandDirective = (function (_super) {\n    tslib_1.__extends(AddCommandDirective, _super);\n    function AddCommandDirective(editService, element, renderer, localization) {\n        var _this = _super.call(this, element, renderer, null, localization) || this;\n        _this.editService = editService;\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AddCommandDirective.prototype.click = function () {\n        this.editService.beginAdd();\n    };\n    Object.defineProperty(AddCommandDirective.prototype, \"buttonClass\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AddCommandDirective.prototype, \"commandClass\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AddCommandDirective;\n}(Button));\nexport { AddCommandDirective };\n",null]}