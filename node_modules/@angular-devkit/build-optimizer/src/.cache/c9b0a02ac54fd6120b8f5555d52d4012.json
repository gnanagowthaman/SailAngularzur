{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dropdowns/dist/es/templates/group-tag-template.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dropdowns/dist/es/templates/group-tag-template.directive.js","mtime":1520327234000},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:max-line-length */\nimport { Directive, TemplateRef } from '@angular/core';\n/**\n * Used for rendering the grouped tag values.\n * It can only be used with the MultiSelect component.\n *\n * The template context is set to the current MultiSelect.\n * To get a reference to the current grouped data items collection, use the `let-dataItems` directive.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"items\">\n *    <ng-template kendoMultiSelectGroupTagTemplate let-dataItems>\n *      <span>{{dataItems.length}} item(s) selected</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n *\n * For more examples, refer to the article on [templates]({% slug templates_multiselect %}).\n */\nvar GroupTagTemplateDirective = /*@__PURE__*/ (function () {\n    function GroupTagTemplateDirective(templateRef) {\n        this.templateRef = templateRef;\n    }\n    return GroupTagTemplateDirective;\n}());\nexport { GroupTagTemplateDirective };\n",null]}