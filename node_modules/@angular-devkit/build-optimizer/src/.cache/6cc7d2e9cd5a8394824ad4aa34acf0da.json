{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/dragdrop/drop-target.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/dragdrop/drop-target.directive.js","mtime":1529128643499},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DragAndDropService } from './drag-and-drop.service';\nimport { filter } from 'rxjs/operators/filter';\n/**\n * @hidden\n */\nvar DropTargetDirective = /*@__PURE__*/ (function () {\n    function DropTargetDirective(element, service) {\n        this.element = element;\n        this.service = service;\n        this.context = {};\n        this.enter = new EventEmitter();\n        this.leave = new EventEmitter();\n        this.drop = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    DropTargetDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.service.add(this);\n        var changes = this.service.changes.pipe(filter(function (_a) {\n            var target = _a.target;\n            return target === _this;\n        }));\n        this.subscriptions.add(changes.pipe(filter(function (_a) {\n            var type = _a.type;\n            return type === 'leave';\n        }))\n            .subscribe(function (e) {\n            _this.leave.next(_this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(function (_a) {\n            var type = _a.type;\n            return type === 'enter';\n        }))\n            .subscribe(function (e) {\n            _this.enter.next(_this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(function (_a) {\n            var type = _a.type;\n            return type === 'drop';\n        }))\n            .subscribe(function (e) {\n            _this.drop.next(_this.eventArgs(e));\n        }));\n    };\n    DropTargetDirective.prototype.ngOnDestroy = function () {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    };\n    DropTargetDirective.prototype.eventArgs = function (e) {\n        return {\n            target: this,\n            mouseEvent: e.mouseEvent,\n            draggable: e.draggable\n        };\n    };\n    return DropTargetDirective;\n}());\nexport { DropTargetDirective };\n",null]}