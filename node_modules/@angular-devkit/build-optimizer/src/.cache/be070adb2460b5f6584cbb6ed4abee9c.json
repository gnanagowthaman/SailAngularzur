{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/pdf/pdf.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/pdf/pdf.component.js","mtime":1529128661455},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Component, Input, ContentChild, ContentChildren, ElementRef, NgZone, QueryList } from '@angular/core';\nimport { take } from 'rxjs/operators/take';\nimport { SuspendService } from '../scrolling/suspend.service';\nimport { PDFService } from './pdf.service';\nimport { PDFMarginComponent } from './pdf-margin.component';\nimport { PDFTemplateDirective } from './pdf-template.directive';\nimport { exportElement } from './export-element';\nimport { GridQuery } from './grid-query';\nimport { ColumnBase } from '../columns/column-base';\nimport { PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nvar createElement = function (tagName, className) {\n    var element = document.createElement(tagName);\n    if (className) {\n        element.className = className;\n    }\n    return element;\n};\nvar createDiv = function (className) {\n    return createElement('div', className);\n};\n/**\n * Configures the PDF export settings of the Kendo UI Grid.\n *\n * For more information, refer to the article on\n * [exporting the Grid to PDF]({% slug pdfexport_grid %}).\n */\nvar PDFComponent = (function (_super) {\n    tslib_1.__extends(PDFComponent, _super);\n    function PDFComponent(pdfService, suspendService, ngZone, element) {\n        var _this = _super.call(this, element) || this;\n        _this.pdfService = pdfService;\n        _this.suspendService = suspendService;\n        _this.ngZone = ngZone;\n        _this.columns = new QueryList();\n        _this.saveSubscription = pdfService.savePDF.subscribe(_this.savePDF.bind(_this));\n        _this.reset = _this.reset.bind(_this);\n        _this.draw = _this.draw.bind(_this);\n        return _this;\n    }\n    PDFComponent.prototype.ngOnDestroy = function () {\n        this.saveSubscription.unsubscribe();\n        this.reset();\n    };\n    PDFComponent.prototype.savePDF = function (component) {\n        var pageSize = component.pageSize;\n        var total = component.view.total;\n        var columns = this.columns.toArray();\n        if (columns.length) {\n            this.originalColumns = component.columns.toArray();\n        }\n        this.component = component;\n        this.suspendService.scroll = true;\n        this.initProgress();\n        this.renderAllPages = this.allPages && pageSize < total;\n        if (this.renderAllPages) {\n            this.skip = component.skip;\n            this.pageSize = pageSize;\n            this.changePage(0, total, this.draw, columns);\n        }\n        else if (columns.length) {\n            this.changeColumns(columns, this.draw);\n        }\n        else {\n            this.draw();\n        }\n    };\n    PDFComponent.prototype.initProgress = function () {\n        var wrapperElement = this.component.wrapper.nativeElement;\n        var progress = this.progress = createDiv('k-loading-pdf-mask');\n        var overlay = wrapperElement.cloneNode(true);\n        progress.appendChild(overlay);\n        progress.appendChild(createDiv('k-loading-color'));\n        progress.appendChild(createElement('span', 'k-i-loading k-icon'));\n        this.originalHeight = wrapperElement.style.height;\n        this.originalOverflow = wrapperElement.style.overflow;\n        wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n        wrapperElement.style.overflow = 'hidden';\n        wrapperElement.appendChild(progress);\n        this.applyScroll(overlay);\n    };\n    PDFComponent.prototype.applyScroll = function (overlay) {\n        var query = new GridQuery(this.component.wrapper.nativeElement);\n        var content = query.content();\n        if (content) {\n            var overlayQuery = new GridQuery(overlay);\n            var overlayContent = overlayQuery.content();\n            overlayContent.scrollTop = content.scrollTop;\n            overlayContent.scrollLeft = content.scrollLeft;\n            overlayQuery.header().scrollLeft = query.header().scrollLeft;\n            var footer = query.footer();\n            if (footer) {\n                overlayQuery.footer().scrollLeft = footer.scrollLeft;\n            }\n            var lockedContent = query.content(true);\n            if (lockedContent) {\n                var overlayLockedContent = overlayQuery.content(true);\n                overlayLockedContent.scrollTop = lockedContent.scrollTop;\n                overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n            }\n        }\n    };\n    PDFComponent.prototype.draw = function () {\n        var _this = this;\n        this.ngZone.runOutsideAngular(function () {\n            var container = _this.container = createDiv('k-grid-pdf-export-element');\n            var element = exportElement(_this.component.wrapper.nativeElement);\n            container.appendChild(element);\n            document.body.appendChild(container);\n            _this.save(element, _this.fileName);\n        });\n    };\n    PDFComponent.prototype.drawOptions = function () {\n        var options = _super.prototype.drawOptions.call(this);\n        options._destructive = true;\n        return options;\n    };\n    PDFComponent.prototype.cleanup = function () {\n        _super.prototype.cleanup.call(this);\n        if (this.component) {\n            var originalColumns = this.originalColumns;\n            delete this.originalColumns;\n            if (this.renderAllPages) {\n                this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n            }\n            else if (originalColumns) {\n                this.changeColumns(originalColumns, this.reset);\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this.reset();\n        }\n        this.removeContainer();\n    };\n    PDFComponent.prototype.removeContainer = function () {\n        if (this.container) {\n            document.body.removeChild(this.container);\n            delete this.container;\n        }\n    };\n    PDFComponent.prototype.changePage = function (skip, _take, callback, columns) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.pdfService.dataChanged.pipe(take(1)).subscribe(function () {\n                if (columns && columns.length) {\n                    _this.changeColumns(columns, callback);\n                }\n                else {\n                    _this.onStable(callback);\n                }\n            });\n            _this.component.notifyPageChange('pdf', { skip: skip, take: _take });\n        });\n    };\n    PDFComponent.prototype.changeColumns = function (columns, callback) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.onStable(callback);\n            _this.component.columns.reset(columns);\n        });\n    };\n    PDFComponent.prototype.reset = function () {\n        this.suspendService.scroll = false;\n        this.renderAllPages = false;\n        if (!this.component) {\n            return;\n        }\n        var wrapperElement = this.component.wrapper.nativeElement;\n        wrapperElement.removeChild(this.progress);\n        wrapperElement.style.height = this.originalHeight;\n        wrapperElement.style.overflow = this.originalOverflow;\n        delete this.progress;\n        delete this.component;\n    };\n    PDFComponent.prototype.onStable = function (callback) {\n        var _this = this;\n        // not sure if it is an actual scenario. occurs in the tests.\n        // onStable is triggered in the same pass without the change detection\n        // thus the callback is called before the changes are applied without the timeout\n        setTimeout(function () {\n            _this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(callback);\n        }, 0); // tslint:disable-line: align\n    };\n    return PDFComponent;\n}(PDFExportComponent));\nexport { PDFComponent };\n",null]}