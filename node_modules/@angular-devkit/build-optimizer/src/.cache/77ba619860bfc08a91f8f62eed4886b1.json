{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/row-editing-directive-base.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/editing-directives/row-editing-directive-base.js","mtime":1529128643766},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { EditingDirectiveBase } from './editing-directive-base';\nimport { LocalRowEditService } from './local-row-edit.service';\n/**\n * @hidden\n */\nvar RowEditingDirectiveBase = /** @class */ (function (_super) {\n    tslib_1.__extends(RowEditingDirectiveBase, _super);\n    function RowEditingDirectiveBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @hidden\n     */\n    RowEditingDirectiveBase.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n        this.subscriptions\n            .add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n    };\n    RowEditingDirectiveBase.prototype.createDefaultService = function () {\n        return new LocalRowEditService(this.grid, this.localDataChangesService);\n    };\n    RowEditingDirectiveBase.prototype.addHandler = function () {\n        this.closeEditor();\n        _super.prototype.addHandler.call(this);\n    };\n    RowEditingDirectiveBase.prototype.editHandler = function (args) {\n        this.closeEditor();\n        this.rowIndex = args.rowIndex;\n        this.grid.editRow(args.rowIndex, this.createModel(args));\n    };\n    RowEditingDirectiveBase.prototype.saveHandler = function (args) {\n        _super.prototype.saveHandler.call(this, args);\n        this.clean();\n    };\n    RowEditingDirectiveBase.prototype.closeEditor = function (rowIndex) {\n        if (rowIndex === void 0) { rowIndex = this.rowIndex; }\n        _super.prototype.closeEditor.call(this, rowIndex);\n        this.clean();\n    };\n    RowEditingDirectiveBase.prototype.clean = function () {\n        delete this.rowIndex;\n    };\n    return RowEditingDirectiveBase;\n}(EditingDirectiveBase));\nexport { RowEditingDirectiveBase };\n",null]}