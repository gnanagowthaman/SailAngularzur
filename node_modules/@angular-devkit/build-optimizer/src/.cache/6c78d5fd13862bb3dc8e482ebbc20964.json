{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/layout/resizable.directive.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/layout/resizable.directive.js","mtime":1529128657038},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, ElementRef, Input, Optional, Renderer2 } from '@angular/core';\nimport { GridComponent } from '../grid.component';\nimport { ResizeService } from \"./resize.service\";\n/**\n * @hidden\n */\nvar ResizableContainerDirective = /*@__PURE__*/ (function () {\n    function ResizableContainerDirective(el, renderer, resizeService, grid) {\n        this.el = el;\n        this.renderer = renderer;\n        this.resizeService = resizeService;\n        this.grid = grid;\n        this.enabled = false;\n    }\n    Object.defineProperty(ResizableContainerDirective.prototype, \"lockedWidth\", {\n        set: function (value) {\n            this._lockedWidth = value;\n            if (this.enabled) {\n                this.attachResize();\n                this.resize();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizableContainerDirective.prototype, \"kendoGridResizableContainer\", {\n        set: function (enabled) {\n            var refresh = enabled !== this.enabled;\n            this.enabled = enabled;\n            if (refresh) {\n                this.attachResize();\n                this.resize();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResizableContainerDirective.prototype.ngOnDestroy = function () {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    };\n    ResizableContainerDirective.prototype.attachResize = function () {\n        if (this.resizeSubscription && !this.enabled) {\n            this.resizeSubscription.unsubscribe();\n            this.resizeSubscription = null;\n        }\n        if (!this.resizeSubscription && this.enabled) {\n            this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n        }\n    };\n    ResizableContainerDirective.prototype.resize = function () {\n        if (this.grid && this.grid.wrapper) {\n            var containerElement = this.grid.wrapper.nativeElement;\n            var width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n            if (this.enabled && width > 0) {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n            }\n            else {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n            }\n        }\n    };\n    return ResizableContainerDirective;\n}());\nexport { ResizableContainerDirective };\n",null]}