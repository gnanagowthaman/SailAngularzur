{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/grouping/group-info.service.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/grouping/group-info.service.js","mtime":1529128654767},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { isColumnComponent } from '../columns/column.component';\nimport { ColumnList } from \"../columns/column-list\";\nimport { expandColumns } from \"../columns/column-common\";\n/**\n * @hidden\n */\nvar GroupInfoService = /*@__PURE__*/ (function () {\n    function GroupInfoService() {\n        this._columnList = ColumnList.empty;\n    }\n    Object.defineProperty(GroupInfoService.prototype, \"columns\", {\n        get: function () {\n            return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GroupInfoService.prototype.registerColumnsContainer = function (columns) {\n        this._columnList = columns;\n    };\n    GroupInfoService.prototype.formatForGroup = function (item) {\n        var column = this.columnForGroup(item);\n        return column ? column.format : \"\";\n    };\n    GroupInfoService.prototype.isGroupable = function (groupField) {\n        var column = this.columns.filter(function (x) { return x.field === groupField; })[0];\n        return column ? column.groupable : true;\n    };\n    GroupInfoService.prototype.groupTitle = function (item) {\n        var column = this.columnForGroup(item);\n        return column ? (column.title || column.field) : this.groupField(item);\n    };\n    GroupInfoService.prototype.groupHeaderTemplate = function (item) {\n        var column = this.columnForGroup(item);\n        return column ? column.groupHeaderTemplateRef : undefined;\n    };\n    GroupInfoService.prototype.groupField = function (group) {\n        return group.data ? group.data.field : group.field;\n    };\n    GroupInfoService.prototype.columnForGroup = function (group) {\n        var field = this.groupField(group);\n        var column = this.columns.filter(function (x) { return x.field === field; })[0];\n        return column;\n    };\n    return GroupInfoService;\n}());\nexport { GroupInfoService };\n",null]}