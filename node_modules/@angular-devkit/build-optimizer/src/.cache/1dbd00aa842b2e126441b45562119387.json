{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-intl/dist/es/number.pipe.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-intl/dist/es/number.pipe.js","mtime":1529128637442},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Pipe } from '@angular/core';\nimport { IntlService } from './intl.service';\n/**\n * Formats a number value to a string based on the requested format.\n * This pipe uses the `IntlService`.\n * @see IntlService\n *\n * @example\n * ```ng-template-no-run\n *   <ul>\n *     <li>{{decimal | kendoNumber:'c' }}</li>\n *     <li>{{stringNumber | kendoNumber:'p' }}</li>\n *     <li>{{int | kendoNumber:'##.00' }}</li>\n *  </ul>\n * ```\n */\nvar NumberPipe = /*@__PURE__*/ (function () {\n    /**\n     * @hidden\n     */\n    function NumberPipe(intlService) {\n        this.intlService = intlService;\n    }\n    /**\n     * Converts a `Number` object to a string based on the specified format.\n     * If no format is provided, the default short date format is used.\n     *\n     * @param value - The date to format.\n     * @param format - The format string or options.\n     * @param localeId - The locale ID to use in place of the default. Optional.\n     * @return - The formatted number.\n     */\n    NumberPipe.prototype.transform = function (value, format, localeId) {\n        if (typeof value === 'string') {\n            value = this.intlService.parseNumber(value);\n        }\n        if (value !== null && value !== undefined) {\n            return this.intlService.formatNumber(value, format, localeId);\n        }\n        return value;\n    };\n    return NumberPipe;\n}());\nexport { NumberPipe };\n",null]}