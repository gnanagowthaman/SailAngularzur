{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/common/filter-descriptor-differ.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/common/filter-descriptor-differ.js","mtime":1529128639890},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { isPresent } from \"../utils\";\nimport { isCompositeFilterDescriptor } from \"@progress/kendo-data-query\";\nvar areDifferent = function (a, b) {\n    return a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\n};\nvar isChanged = function (a, b) {\n    if (a.length !== b.length) {\n        return true;\n    }\n    for (var idx = 0, len = a.length; idx < len; idx++) {\n        var prev = a[idx];\n        var curr = b[idx];\n        if (isCompositeFilterDescriptor(prev)) {\n            // tslint:disable-next-line:no-use-before-declare\n            if (diffFilters(prev, curr[idx])) {\n                return true;\n            }\n        }\n        else if (areDifferent(prev, curr)) {\n            return true;\n        }\n    }\n    return false;\n};\nvar cloneFilter = function (_a) {\n    var field = _a.field, ignoreCase = _a.ignoreCase, operator = _a.operator, value = _a.value;\n    return ({\n        field: field,\n        ignoreCase: ignoreCase,\n        operator: operator,\n        value: value\n    });\n};\n/**\n * @hidden\n */\nexport var cloneFilters = function (_a) {\n    var filters = _a.filters, logic = _a.logic;\n    return ({\n        filters: filters.map(function (x) { return isCompositeFilterDescriptor(x) ? cloneFilters(x) : cloneFilter(x); }),\n        logic: logic\n    });\n};\n/**\n * @hidden\n */\nexport var diffFilters = function (a, b) {\n    if (isPresent(a) && !isPresent(b)) {\n        return true;\n    }\n    if (!isPresent(a) && isPresent(b)) {\n        return true;\n    }\n    return isPresent(a) && isPresent(b) && isChanged(a.filters, b.filters);\n};\n",null]}