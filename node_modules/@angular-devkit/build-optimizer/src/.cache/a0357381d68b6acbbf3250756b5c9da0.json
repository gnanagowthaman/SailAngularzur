{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/filtering/operators/filter-operator.base.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/filtering/operators/filter-operator.base.js","mtime":1529128650760},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Input } from '@angular/core';\nimport { isNullOrEmptyString } from '../../utils';\nvar localizeOperators = function (operators) {\n    return function (localization) {\n        return Object.keys(operators).reduce(function (acc, key) {\n            acc[operators[key]] = localization.get(key);\n            return acc;\n        }, {});\n    };\n}; // tslint:disable-line:align\nvar operatorTexts = localizeOperators({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterGteOperator\": \"gte\",\n    \"filterGtOperator\": \"gt\",\n    \"filterLteOperator\": \"lte\",\n    \"filterLtOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\",\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterAfterOrEqualOperator\": \"after-eq\",\n    \"filterAfterOperator\": \"after\",\n    \"filterBeforeOrEqualOperator\": \"before-eq\",\n    \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\nexport var toJSON = function (xs) { return xs.map(function (x) { return x.toJSON(); }); };\n/**\n * @hidden\n */\nvar FilterOperatorBase = /*@__PURE__*/ (function () {\n    function FilterOperatorBase(operator, localization) {\n        this.operator = operator;\n        this.localization = localization;\n        this.messages = operatorTexts(this.localization);\n        this._text = this.messages[this.operator];\n        this.localization.changes.subscribe(this.refreshText.bind(this));\n    }\n    Object.defineProperty(FilterOperatorBase.prototype, \"text\", {\n        /**\n         * The text to be displayed in the DropDownList.\n         * @readonly\n         * @type {string}\n         * @memberOf FilterOperatorBase\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         *\n         */\n        set: function (value) {\n            this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    FilterOperatorBase.prototype.toJSON = function () {\n        return {\n            text: this.text,\n            value: this.operator\n        };\n    };\n    FilterOperatorBase.prototype.refreshText = function () {\n        var update = this._text === this.messages[this.operator];\n        this.messages = operatorTexts(this.localization);\n        if (update) {\n            this._text = this.messages[this.operator];\n        }\n    };\n    return FilterOperatorBase;\n}());\nexport { FilterOperatorBase };\n",null]}