{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/common/expand-state.service.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/common/expand-state.service.js","mtime":1529128639882},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Subject } from \"rxjs/Subject\";\n/**\n * @hidden\n */\nvar ExpandStateService = /*@__PURE__*/ (function () {\n    function ExpandStateService(isInitiallyCollapsed) {\n        this.isInitiallyCollapsed = isInitiallyCollapsed;\n        this.changes = new Subject();\n        this.rowState = [];\n    }\n    ExpandStateService.prototype.toggleRow = function (index, dataItem) {\n        var rowIndex = this.rowState.indexOf(index);\n        var found = rowIndex === -1;\n        this.rowState = found ? this.rowState.concat([index]) : this.rowState.slice(0, rowIndex).concat(this.rowState.slice(rowIndex + 1));\n        this.changes.next({ dataItem: dataItem, expand: this.isInitiallyCollapsed ? found : !found, index: index });\n    };\n    ExpandStateService.prototype.isExpanded = function (index) {\n        var found = this.rowState.indexOf(index) >= 0;\n        return this.isInitiallyCollapsed ? found : !found;\n    };\n    ExpandStateService.prototype.reset = function () {\n        this.rowState = [];\n    };\n    return ExpandStateService;\n}());\nexport { ExpandStateService };\n",null]}