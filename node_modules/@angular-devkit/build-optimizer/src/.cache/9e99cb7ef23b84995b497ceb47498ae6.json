{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column.component.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/columns/column.component.js","mtime":1529128638640},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { forwardRef, Component, Input, ContentChild, SkipSelf, Host, Optional } from '@angular/core';\nimport { CellTemplateDirective } from '../rendering/cell-template.directive';\nimport { GroupHeaderTemplateDirective } from '../grouping/group-header-template.directive';\nimport { EditTemplateDirective } from '../editing/edit-template.directive';\nimport { GroupFooterTemplateDirective } from '../grouping/group-footer-template.directive';\nimport { ColumnBase } from './column-base';\nimport { isPresent } from '../utils';\nimport { FilterCellTemplateDirective } from '../filtering/cell/filter-cell-template.directive';\nimport { FilterMenuTemplateDirective } from '../filtering/menu/filter-menu-template.directive';\n/**\n * @hidden\n */\nexport function isColumnComponent(column) {\n    return isPresent(column.field);\n}\n/**\n * Represents the columns of the Grid.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nvar ColumnComponent = (function (_super) {\n    tslib_1.__extends(ColumnComponent, _super);\n    function ColumnComponent(parent) {\n        var _this = _super.call(this, parent) || this;\n        /**\n         * Allows the column headers to be clicked and the `sortChange` event emitted.\n         * You have to handle the `sortChange` event yourself and sort the data.\n         */\n        _this.sortable = true;\n        /**\n         * Determines if the column can be dragged to the group panel. The default value is `true`.\n         * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n         */\n        _this.groupable = true;\n        /**\n         * Defines the editor type. Used when the column enters the edit mode. The default editor type is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [editor]=\"'numeric'\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        _this.editor = 'text';\n        /**\n         * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [filter]=\"'numeric'\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        _this.filter = 'text';\n        /**\n         * Defines if a filter UI will be displayed for this column. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        _this.filterable = true;\n        /**\n         * Defines whether the column is editable. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        _this.editable = true;\n        return _this;\n    }\n    Object.defineProperty(ColumnComponent.prototype, \"templateRef\", {\n        get: function () {\n            return this.template ? this.template.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"groupHeaderTemplateRef\", {\n        get: function () {\n            return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"groupFooterTemplateRef\", {\n        get: function () {\n            return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"editTemplateRef\", {\n        get: function () {\n            return this.editTemplate ? this.editTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"filterCellTemplateRef\", {\n        get: function () {\n            return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"filterMenuTemplateRef\", {\n        get: function () {\n            return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColumnComponent.prototype, \"displayTitle\", {\n        get: function () {\n            return this.title === undefined ? this.field : this.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColumnComponent;\n}(ColumnBase));\nexport { ColumnComponent };\n",null]}