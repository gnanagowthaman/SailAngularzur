{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/timepicker/util.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-dateinputs/dist/es/timepicker/util.js","mtime":1529128645834},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { cloneDate } from '@progress/kendo-date-math';\nimport { TIME_PART } from './models/time-part.default';\nvar defaultGetters = [\n    { type: TIME_PART.hour, getter: function (value) { return value.getHours(); } },\n    { type: TIME_PART.minute, getter: function (value) { return value.getMinutes(); } },\n    { type: TIME_PART.second, getter: function (value) { return value.getSeconds(); } },\n    { type: TIME_PART.millisecond, getter: function (value) { return value.getMilliseconds(); } }\n];\nvar left = function (getter) { return function (origin, _) { return getter(origin); }; };\nvar right = function (getter) { return function (_, candidate) { return getter(candidate); }; };\nvar convertToObject = function (parts) { return parts.reduce(function (obj, p) { obj[p.type] = p.type; return obj; }, {}); };\nvar getterByPart = function (parts) { return function (g) { return parts[g.type] ? right(g.getter) : left(g.getter); }; };\nvar gettersFactory = function (getters) { return function (parts) { return (getters.map(getterByPart(convertToObject(parts)))); }; };\nvar snapValue = function (getter, step) { return function (date) {\n    var value = getter(date);\n    return value - (value % step);\n}; };\nvar snappersFactory = function (getters) { return function (steps) { return (getters.map(function (g) {\n    var step = steps[g.type];\n    return step ? snapValue(g.getter, step) : g.getter;\n})); }; };\n/**\n * @hidden\n */\nexport var generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\nexport var generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\nexport var valueMerger = function (getters) { return function (origin, candidate) {\n    origin.setHours.apply(origin, getters.map(function (g) { return g(origin, candidate); }));\n    return origin;\n}; };\n/**\n * @hidden\n */\nexport var snapTime = function (snappers) { return function (candidate) {\n    var date = cloneDate(candidate);\n    date.setHours.apply(date, snappers.map(function (s) { return s(date); }));\n    return date;\n}; };\n",null]}