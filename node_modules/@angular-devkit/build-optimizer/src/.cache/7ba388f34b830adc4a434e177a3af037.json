{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-intl/dist/es/intl-members.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-intl/dist/es/intl-members.js","mtime":1529128637366},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as intl from '@telerik/kendo-intl';\nimport { errorSolutions } from './error-solutions';\nfunction formatMessage(error) {\n    var message = error.message;\n    var errorSolution = errorSolutions[Object.keys(errorSolutions).filter(function (key) { return message.indexOf(key) === 0; })[0]];\n    return errorSolution ? message + \" \" + errorSolution : message;\n}\nfunction intlMethod(fn) {\n    return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        try {\n            return fn.apply(null, values);\n        }\n        catch (error) {\n            error.message = formatMessage(error);\n            throw error;\n        }\n    };\n}\n/**\n * @hidden\n */\nexport var dateFormatNames = intlMethod(intl.dateFormatNames);\n/**\n * @hidden\n */\nexport var dateFieldName = intlMethod(intl.dateFieldName);\n/**\n * @hidden\n */\nexport var firstDay = intlMethod(intl.firstDay);\n/**\n * @hidden\n */\nexport var format = intlMethod(intl.format);\n/**\n * @hidden\n */\nexport var formatDate = intlMethod(intl.formatDate);\n/**\n * @hidden\n */\nexport var formatNumber = intlMethod(intl.formatNumber);\n/**\n * @hidden\n */\nexport var load = intlMethod(intl.load);\n/**\n * @hidden\n */\nexport var numberSymbols = intlMethod(intl.numberSymbols);\n/**\n * @hidden\n */\nexport var parseDate = intlMethod(intl.parseDate);\n/**\n * @hidden\n */\nexport var parseNumber = intlMethod(intl.parseNumber);\n/**\n * @hidden\n */\nexport var splitDateFormat = intlMethod(intl.splitDateFormat);\n/**\n * @hidden\n */\nexport var toString = intlMethod(intl.toString);\n/**\n * @hidden\n */\nexport var setData = intlMethod(intl.setData);\n",null]}