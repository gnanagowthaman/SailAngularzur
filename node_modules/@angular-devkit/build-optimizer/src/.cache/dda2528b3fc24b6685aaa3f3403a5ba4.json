{"remainingRequest":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/data/change-notification.service.js","dependencies":[{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@progress/kendo-angular-grid/dist/es/data/change-notification.service.js","mtime":1529128642279},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/cache-loader/dist/cjs.js","mtime":1529128679567},{"path":"/home/vahai/Desktop/jun16/SailAngularzur/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { EventEmitter, NgZone, Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators/take';\n/**\n * @hidden\n */\nvar ChangeNotificationService = /*@__PURE__*/ (function () {\n    function ChangeNotificationService(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new EventEmitter();\n    }\n    ChangeNotificationService.prototype.notify = function () {\n        var _this = this;\n        if (!this.subscription || this.subscription.closed) {\n            this.subscription = this.ngZone.onStable\n                .asObservable().pipe(take(1))\n                .subscribe(function () { return _this.changes.emit(); });\n        }\n    };\n    return ChangeNotificationService;\n}());\nexport { ChangeNotificationService };\n",null]}